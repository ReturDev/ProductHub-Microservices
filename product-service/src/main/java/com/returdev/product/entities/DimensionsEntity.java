package com.returdev.product.entities;

import jakarta.persistence.*;
import jakarta.validation.constraints.Positive;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Represents a dimensions entity in the system.
 * This entity is mapped to the "dimensions" table in the database.
 *
 * <p>Each dimensions entity is uniquely identified by an ID and has attributes
 * that define the physical measurements of a product, including weight and dimensions
 * in centimeters.</p>
 */
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@Table(name = "dimensions")
@Entity
public class DimensionsEntity {

    /**
     * The unique identifier for the dimensions.
     * This value is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The weight of the product in kilograms.
     * Must be a positive value and cannot be null.
     */
    @Positive(message = "${validation.positive_number.message}")
    @Column(name = "weight", columnDefinition = "FLOAT(10,3)", nullable = false)
    private float weightKg;

    /**
     * The length of the product in centimeters.
     * Must be a positive value and cannot be null.
     */
    @Positive(message = "${validation.positive_number.message}")
    @Column(name = "length", columnDefinition = "FLOAT(10,3)", nullable = false)
    private float lengthCm;

    /**
     * The width of the product in centimeters.
     * Must be a positive value and cannot be null.
     */
    @Positive(message = "${validation.positive_number.message}")
    @Column(name = "width", columnDefinition = "FLOAT(10,3)", nullable = false)
    private float widthCm;

    /**
     * The height of the product in centimeters.
     * Must be a positive value and cannot be null.
     */
    @Positive(message = "${validation.positive_number.message}")
    @Column(name = "height", columnDefinition = "FLOAT(10,3)", nullable = false)
    private float heightCm;

}

